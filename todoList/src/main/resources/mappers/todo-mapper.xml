<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.todo.model.mapper.TodoMapper">
	<!-- Mapper 인터페이스 경로 작성(필수로 작성!!!!!!) 패키지 경로를 포함한 전체 이름으로 작성 -->


	<!-- 아래 태그는 mappers.xml파일 생서하자마자 삭제 ! -->
	<!-- <cache-ref namespace=""/> -->

	<!-- 태그로 sql 구문 작성 -->
	<!-- todomapper.java 메서드명과 ID값이 일치해야함 -->
	<!-- resultType 은 String이 아니라 mybatis 타입인 string 으로 표기 -->
	<select id="testTitle" resultType="string">
		SELECT TODO_TITLE FROM TB_TODO
		WHERE TODO_NO =1
	</select>

	<!-- <select> 태그 속성 -id 속성 : 태그를 식별하는 값 (연결된 mapper의 메서드명과 동일하게 작성하여 연결) 
		-resultType : 조회 결과 한 줄 (1행)을 저장하여 반환할 변수 / 객체 자료형 지정 조회 결과가 여러 행이면 행별로 변수 
		/ 객체 자요형으로 저장 후 모아서 List로 반환 (필드명 == 컬럼명(필드명과 컬럼명이 같은경우): 조회결과가 자동으로 객체의 
		필드에 세팅) -->


	<!-- 할일 목록 조회 -->
	<!-- 행 따로따로 저장됨 -->
	<!-- resultType="edu.kh.todo.model.dto.Todo" -> Todo라고만 써도된다. 왜? DBConfig에서 
		edu.kh.todo패키지 이하는 모두 클래스명으로 별칭 등록해둠 -->
	<select id="selectAll" resultType="Todo">
		SELECT TODO_NO,TODO_TITLE,
		COMPLETE,
		TO_CHAR (REG_DATE,'YYYY-MM-DD HH24:MI:SS')REG_DATE
		FROM
		TB_TODO
		ORDER BY TODO_NO
	</select>

	<!-- 완료된 할일 개수 조회 -->
	<!-- 자바에서 int mybatis 에는 _int -->
	<select id="getCompleteCount" resultType="_int">

		SELECT COUNT(*)
		FROM
		TB_TODO
		WHERE COMPLETE ='Y'

	</select>

	<!-- mapper.xml 에서 java data (파라미터)를 SQL에 삽입하는 방법 1) #{변수명 | 필드명} : SQL 
		에 삽입 시 양쪽에 '' 붙여서 삽입 ex)MEMBER_EMAIL =#{memberEmail} -> 'member01@naver.com' 
		=================================================================== 2) ${변수명 
		|필드명} : sql에 삽입 시 양쪽에 '' 붙이지 않고 삽입 ex)MEMBER_EMAIL =${memberEmail} -> member01@naver.com(오류 
		발생) ${} 언제 사용할까? 1) 삽입할 값이 숫자인 경우 2)SQL문 자체가 변해야 하는 경우 ex) SELECT MEMBER_NICKNAME, 
		${KEY} FROM "MEMBER" - ${key} == ENROLL_dATE인 경우 SELECT MEMBER_NICKNAME, 
		ENROLL_DATE FROM "MEMBER" -${KEY} == MEMBER.ADDRESS 인경우 SELECT MEMBER_NICKNAME, 
		MEMBER_aDDRESS FROM "MEMBER" -->

	<!-- parameterType : 전달 받은 값(전달인자)의 타입을 명시 ->DTO , Map인 경우 필드명 /key 를 입력해서 
		하나씩 꺼내 사용할수 있음 -->


	<!-- 할 일 추가 -->
	<insert id="addTodo" parameterType="edu.kh.todo.model.dto.Todo">
		INSERT INTO TB_TODO
		VALUES(SEQ_TODO_NO.NEXTVAL, #{todoTitle}, #{todoContent}, DEFAULT,
		DEFAULT)
	</insert>


	<!-- 할일 상세 조회 -->
	<!-- parameterType="_int" resultType="Todo" 없어도 가능 -->
	<!-- 넘어온 파라미터값 int ,결과는 Todo -->
	<select id="todoDetail" parameterType="_int" resultType="Todo">
		SELECT TODO_NO ,
		TODO_TITLE , TODO_CONTENT,COMPLETE,
		TO_CHAR
		(REG_DATE,'YYYY-MM-DD HH24:MI:SS')REG_DATE
		FROM TB_TODO
		WHERE
		TODO_NO=${todoNo}   <!-- #{todoNo}도 가능 -->
	</select>

	<!-- 완료 여부 변경 -->

	<update id="changeComplete" parameterType="Todo" >
		UPDATE TB_TODO
		SET
		COMPLETE = #{complete}
		WHERE TODO_NO = ${todoNo}
	</update>


	<!-- <update id="todoUpdate" parameterType="Todo"> UPDATE TB_TODO SET TITLE 
		= #{todoTitle} CONTENT =#{todoContent} WHERE TODO_NO = ${todoNo} </update> -->


	<select id="viewDetail">
		SELECT TODO_NO,TODO_TITLE , TODO_CONTENT
		FROM TB_TODO
		WHERE TODO_NO =${todoNo}

	</select>

	<update id="updateTodo" parameterType="Todo" >
		UPDATE TB_TODO SET
		TODO_TITLE = #{todoTitle},
		TODO_CONTENT=#{todoContent}
		WHERE TODO_NO =
		${todoNo}
	</update>



	<delete id="todoDelete" parameterType="_int" >
		DELETE FROM TB_TODO
		WHERE TODO_NO=${todoNo}

	</delete>
</mapper>
